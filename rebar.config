%%%----------------------------------------------------------------------
%%%
%%% ejabberd, Copyright (C) 2002-2017   ProcessOne
%%%
%%% This program is free software; you can redistribute it and/or
%%% modify it under the terms of the GNU General Public License as
%%% published by the Free Software Foundation; either version 2 of the
%%% License, or (at your option) any later version.
%%%
%%% This program is distributed in the hope that it will be useful,
%%% but WITHOUT ANY WARRANTY; without even the implied warranty of
%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%%% General Public License for more details.
%%%
%%% You should have received a copy of the GNU General Public License along
%%% with this program; if not, write to the Free Software Foundation, Inc.,
%%% 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
%%%
%%%----------------------------------------------------------------------

{deps, [ 
		lager,
		base64url,
        p1_utils,
        cache_tab,
        fast_tls,
        stringprep, 
        fast_xml, 
        xmpp,  
		ezlib,
		eimp,
		jose,
        fast_yaml,
        jiffy, 
        p1_oauth2,  
        xn,
		goldrush, 
		ejabberd
	]}.

 

{erl_first_files, ["deps/ejabberd/src/ejabberd_config.erl", "deps/ejabberd/src/gen_mod.erl", "deps/ejabberd/src/mod_muc_room.erl"]}.

{erl_opts, [nowarn_deprecated_function,
 			{i, "include"},
			{i, "../xmpp/include"},
			{i, "../fast_xml/include"},
			{i, "../p1_utils/include"},
			{i, "../ejabberd/include"},
            {i, "deps/xmpp/include"},
	        {i, "deps/fast_xml/include"}, 
	        {i, "deps/p1_utils/include"},
            {if_var_false, debug, no_debug_info},
            {if_var_true, debug, debug_info},
            {if_var_true, roster_gateway_workaround, {d, 'ROSTER_GATWAY_WORKAROUND'}},
            {if_var_match, db_type, mssql, {d, 'mssql'}},
            {if_var_true, elixir, {d, 'ELIXIR_ENABLED'}},
            {if_var_true, erlang_deprecated_types, {d, 'ERL_DEPRECATED_TYPES'}},
	        {if_version_above, "18", {d, 'STRONG_RAND_BYTES'}},
	        {if_version_above, "17", {d, 'GB_SETS_ITERATOR_FROM'}},
            {if_var_true, hipe, native},
            {src_dirs, [asn1, src,
                        {if_var_true, tools, tools},
                        {if_var_true, elixir, include}]}]}.

{deps_erl_opts, [{if_var_true, hipe, native}]}.

{if_rebar3, {plugins, [rebar3_hex, {provider_asn1, "0.2.0"}]}}.
{if_not_rebar3, {plugins, [
			   deps_erl_opts,
			   {if_var_true, elixir, rebar_elixir_compiler},
			   {if_var_true, elixir, rebar_exunit}
			  ]}}.

{if_var_true, elixir,
              {lib_dirs, ["deps/elixir/lib"]}}.
{if_var_true, elixir,
              {src_dirs, ["include"]}}.

{sub_dirs, ["rel"]}.

{keep_build_info, true}.

{xref_warnings, false}.

{xref_checks, [deprecated_function_calls]}.

{xref_exclusions, [
                   "(\"gen_transport\":_/_)",
                   "(\"eprof\":_/_)",
                   {if_var_false, mysql, "(\".*mysql.*\":_/_)"},
                   {if_var_false, pgsql, "(\".*pgsql.*\":_/_)"},
                   {if_var_false, pam, "(\"epam\":_/_)"},
                   {if_var_false, riak, "(\"riak.*\":_/_)"},
                   {if_var_true, riak, "(\"riak_object\":_/_)"},
                   {if_var_false, zlib, "(\"ezlib\":_/_)"},
                   {if_var_false, http, "(\"lhttpc\":_/_)"},
                   {if_var_false, iconv, "(\"iconv\":_/_)"},
                   {if_var_false, odbc, "(\"odbc\":_/_)"},
                   {if_var_false, sqlite, "(\"sqlite3\":_/_)"},
                   {if_var_false, elixir, "(\"Elixir.*\":_/_)"},
                   {if_var_false, redis, "(\"eredis\":_/_)"}]}.

{eunit_compile_opts, [{i, "tools"},
		      {i, "include"},
			  {i, "deps/ejabberd/include"}, 
		      {i, "deps/p1_utils/include"},
		      {i, "deps/fast_xml/include"},
		      {i, "deps/xmpp/include"}]}.

{if_version_above, "17", {cover_enabled, true}}.
{cover_export_enabled, true}.

{post_hook_configure, [{"fast_tls", []},
                       {"stringprep", []},
                       {"fast_yaml", []}, 
                       {"fast_xml", [{if_var_true, full_xml, "--enable-full-xml"}]},
                       {if_var_true, pam, {"epam", []}},
                       {if_var_true, zlib, {"ezlib", []}}]}.

{port_env, [{"CFLAGS", "-g -O2 -Wall"}]}.

{port_specs, [{"priv/lib/jid.so", ["c_src/jid.c"]}]}.

%% Local Variables:
%% mode: erlang
%% End:
%% vim: set filetype=erlang tabstop=8:
